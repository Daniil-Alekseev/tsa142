#include <iostream>
#include <cmath>  // Для функции abs (модуль числа)

using namespace std;

/**
 * Вычисляет факториал числа итеративным методом.
 * @param num Число, для которого вычисляется факториал.
 * @return Факториал числа num или 0, если число отрицательное.
 */
unsigned long long factorial(int num) {
    if (num < 0) return 0;  // Факториал отрицательного числа не определен
    unsigned long long result = 1;
    for (int i = 1; i <= num; ++i) {
        result *= i;
    }
    return result;
}

/**
 * Вычисляет сумму первых n членов последовательности по формуле: (k+2)! * (k+3)!.
 * @param n Количество членов последовательности.
 * @return Сумма первых n членов последовательности.
 */
unsigned long long sum_first_n_terms(int n) {
    unsigned long long sum = 0;
    for (int k = 0; k <= n; ++k) {
        sum += factorial(k + 2) * factorial(k + 3);  // Формула: (k+2)! * (k+3)!
    }
    return sum;
}

/**
 * Вычисляет сумму членов последовательности, модуль которых не меньше e.
 * @param e Минимальное значение модуля члена последовательности.
 * @return Сумма членов последовательности, удовлетворяющих условию |term| >= e.
 */
unsigned long long sum_terms_above_e(double e) {
    unsigned long long sum = 0;
    int k = 0;
    while (true) {
        unsigned long long term = factorial(k + 2) * factorial(k + 3);  // Текущий член последовательности
        if (abs(static_cast<double>(term)) < e) {  // Проверка условия |term| >= e
            break;  // Выход из цикла, если условие не выполняется
        }
        sum += term;
        k++;
    }
    return sum;
}

/**
 * Основная функция программы.
 * Запрашивает у пользователя входные данные, проверяет их корректность,
 * вычисляет и выводит результаты.
 * @return 0 в случае успешного выполнения, 1 при ошибке ввода.
 */
int main() {
    int n;
    double e;

    // Ввод данных от пользователя с проверкой корректности
    cout << "Введите количество членов последовательности (n): ";
    cin >> n;
    if (n < 0) {
        cout << "Ошибка: n должно быть неотрицательным." << endl;
        return 1;
    }

    cout << "Введите минимальное значение (e): ";
    cin >> e;
    if (e < 0) {
        cout << "Ошибка: e должно быть неотрицательным." << endl;
        return 1;
    }

    // Вычисление и вывод результатов
    cout << "Сумма первых " << n << " членов последовательности: " << sum_first_n_terms(n) << endl;
    cout << "Сумма членов последовательности, не меньших " << e << " по модулю: " << sum_terms_above_e(e) << endl;

    return 0;
}
