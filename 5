#include <iostream>
#include <cmath>
#include <limits>

using namespace std;

// Функция для вычисления факториала числа (итеративный метод)
// Параметры:
//   num - число, для которого вычисляется факториал
// Возвращает:
//   Факториал числа num
unsigned long long factorial(int num) {
    if (num < 0) return 0; // Факториал отрицательного числа не определен
    unsigned long long result = 1;
    for (int i = 1; i <= num; ++i) {
        result *= i; // Умножаем результат на текущее число
    }
    return result;
}

// Функция для вычисления суммы первых n членов последовательности (вариант 1)
// Параметры:
//   n - количество членов последовательности для суммирования
// Возвращает:
//   Сумму первых n членов последовательности
double sum_first_n_terms(int n) {
    double sum = 0.0;
    for (int k = 0; k <= n; ++k) {
        double numerator = pow(-1, k); // Числитель: (-1)^k
        double denominator = factorial(k + 2) * factorial(k + 3); // Знаменатель: (k+2)! * (k+3)!
        sum += numerator / denominator; // Добавляем текущий член к сумме
    }
    return sum;
}

// Функция для вычисления суммы членов последовательности, по модулю не меньших e (вариант 1)
// Параметры:
//   e - минимальное абсолютное значение члена последовательности для включения в сумму
// Возвращает:
//   Сумму членов последовательности, удовлетворяющих условию |член| >= e
double sum_terms_above_epsilon(double e) {
    double sum = 0.0;
    int k = 0;
    while (true) {
        double numerator = pow(-1, k); // Числитель: (-1)^k
        double denominator = factorial(k + 2) * factorial(k + 3); // Знаменатель: (k+2)! * (k+3)!
        double term = numerator / denominator; // Текущий член последовательности
        if (abs(term) < e) break; // Если |член| < e, прерываем цикл
        sum += term; // Добавляем текущий член к сумме
        k++; // Переходим к следующему члену
    }
    return sum;
}

int main() {
    int n;
    double e;

    // Запрос ввода n с проверкой
    cout << "Введите количество членов последовательности n (целое число >= 0): ";
    while (!(cin >> n) || n < 0) {
        cin.clear(); // Сброс флага ошибки
        cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Очистка буфера ввода
        cout << "Ошибка ввода. Пожалуйста, введите целое число >= 0: ";
    }

    // Запрос ввода e с проверкой
    cout << "Введите минимальное абсолютное значение e (число > 0): ";
    while (!(cin >> e) || e <= 0) {
        cin.clear(); // Сброс флага ошибки
        cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Очистка буфера ввода
        cout << "Ошибка ввода. Пожалуйста, введите число > 0: ";
    }

    // Вычисление и вывод суммы первых n членов
    double sum_n = sum_first_n_terms(n);
    cout << "Сумма первых " << n << " членов последовательности: " << sum_n << endl;

    // Вычисление и вывод суммы членов, по модулю не меньших e
    double sum_epsilon = sum_terms_above_epsilon(e);
    cout << "Сумма членов последовательности с |член| >= " << e << ": " << sum_epsilon << endl;

    return 0;
}
